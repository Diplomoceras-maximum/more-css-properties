* {
  padding: 10px;
  margin: 10px;
}
/* === Useful CSS Properties === */

/* Background

    1. background property is shorthand for 8 other properties
    2. background property lets you add colour, images, and control how images behave

    Shorthand for:
    1. background-attachment: whether the background scrolls with the page or stays (background-attachment: fixed;)
    2. background-clip: what area the background colour/image is visible in (background-clip: border-box;)
    3. background-color: the background colour of an element (background-color: lightblue;)
    4. background-image: a background image such as a url or gradient (background-image: url("bg.png");)
    5. background-origin: what area the background image is placed relative to (background-origin: padding-box;)
    6. background-position: where the background image is positioned (background-position: center;)
    7. background-repeat: whether the background image repeats (background-repeat: no-repeat;)
    8. background-size: how large the background image is (background-size: cover;)


    === background-color ===

    .box {
        background-color: #ffffff;
    }

    Sets a colour behind the content


    === background-image ===

    .hero {
        background-image: url("mountains.jpg");
    }

    Sets an image behind the content


    === background-repeat ===

    .tile {
        background-image: url("pattern.png");
        background-repeat: repeat; 
    }

    Controls background repetition, no-repeat for logos and banners, repeat for textures and patterns


    === background-position ===

    .banner {
        background-image: url("header.jpg");
        background-position: center top;
    }

    Sets where image is placed, values include: center, top, left, right, bottom, etc


    === background-size ===

    .cover {
        background-image: url("photo.jpg");
        background-size: cover;
    }

    Defined how big the image is, cover fills entire element and crops as needed, contain makes sure the hole image fits even if there is extra space left


    === background-attachment ===

    .fixed-background {
        background-image: url("sky.jpg");
        background-attachment: fixed;
    }

    Controls scroll behaviour, scroll is for scrolling with the page, fixed stays in place while content scrolls


    === background-origin ===

    .origin-example {
        background-image: url("shape.png");
        background-origin: content-box;
    }

    Defines where the background starts inside of, border-box starts at edge, padding-box starts inside padding, content-box starts inside actual content


    === background-clip ===

    .clip-example {
        background-color: lightblue;
        border: 5px solid black;
        background-clip: content-box;
    }

    Controls how far the background extends, border-box fills the entire box, padding-box excludes the border, content-box fils only content area

*/
/* Shorthand in one line:

    image, repeat, position, size (/), attachment, colour

*/

.box {
  background: url(bg.jpg) no-repeat center / cover fixed lightblue;
}

/* Border

    1. border property is a shorthand for setting width, style, and colour
    2. border can be applied to all sides at once, or to individual sides (top, right, bottom, left)

    Shorthand for:
    1. border-width: how thick the border is (border-width: 2px;)
    2. border-style: the style of the border line (border-style: solid;)
    3. border-color: the colour of the border (border-color: black;)


    === border-top, border-right, border-bottom, border-left ===

    .sides {
        border-top: 2px solid red;
        border-right: 2px dashed green;
        border-bottom: 2px dotted blue;
        border-left: 2px double orange;
    }

    Allows you to control each side separately


    === border-width ===

    .wide {
        border-style: solid;
        border-width: 5px;
    }

    Sets the thickness of the border, needs a border-style to appear


    === border-style ===

    .styles {
        border-width: 2px;
        border-style: dashed;
    }

    Sets the type of line used, styles include: solid, dashed, dotted, double, groove, ridge, inset, outset


    === border-color ===

    .colored {
        border: 2px solid;
        border-color: purple;
    }

    Sets the colour of the border


    === border-radius ===

    .rounded {
        border: 2px solid black;
        border-radius: 10px;
    }

    Rounds the corners of the element


    === border-radius (circle) ===

    .circle {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background-color: teal;
    }

    makes a perfect circle when width and height are equal and border radius is 50%

*/
/* Shorthand example in one line:

    width, style, colour

*/

.card {
  border: 1px solid #cccccc;
  border-radius: 8px;
}

/* Box Shadow

    1. box-shadow property adds a shadow around an element
    2. Useful for creating depth and seperating elements visually
    3. Can be subtle (for cards) or dramatic (for modals)

    Syntax: offset-x, offset-y, blur-radius, spread-radius (optional), colour


    === box-shadow (basic) ===

    .card {
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    - 0: horizontal offset (moves left/right)
    - 2px: vertical offset (moves up/down)
    - 5px: blur radius (how soft the shadow is)
    - rgba(0, 0, 0, 0.1): shadow colour (light transparent black)


    === box-shadow (stronger) ===

    .modal {
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
    }

    More depth for higher elevation effects (modals, overlays)


    === inset shadow ===

    .inset-box {
        box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    "inset" puts the shadow inside the element
*/

.floating-card {
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.modal {
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
}

.inset-box {
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
}

/* Overflow

    1. overflow defines what happens when content is too big for its container
    2. Useful for scrollable areas or to hide overflowing content

    Options:
    - visible (default): content spills out
    - hidden: cuts off extra content
    - scroll: always shows scrollbars
    - auto: adds scrollbars only when needed


    === overflow: auto ===

    .scroll-box {
        width: 300px;
        height: 150px;
        overflow: auto;
    }

    Adds scrollbars only if content is too big


    === overflow: hidden ===

    .crop-box {
        overflow: hidden;
    }

    Cuts off content that doesnâ€™t fit

    
    === overflow-x and overflow-y ===

    .horizontal-scroll {
        overflow-x: scroll;
        overflow-y: hidden;
    }

    Controls scrolling separately on horizontal and vertical axes
*/

.scroll-box {
  width: 300px;
  height: 150px;
  overflow: auto;
}

.crop-box {
  height: 30px;
  overflow: hidden;
}

.horizontal-scroll {
  overflow-x: scroll;
  overflow-y: hidden;
}

/* Opacity

    1. The opacity property sets how transparent an element is
    2. Values range from 1 (fully visible) to 0 (fully invisible)


    === opacity: 0.5 ===

    .faded {
        opacity: 0.5;
    }

    Makes element 50% transparent


    === opacity: 0 ===

    .invisible {
        opacity: 0;
    }

    Makes the element fully invisible but still takes up space

    
    === opacity with hover ===

    .button:hover {
        opacity: 0.8;
    }

    Often used for hover effects on buttons, images, and links
*/

.faded {
  background-color: blue;
  opacity: 0.5;
}

.invisible {
  opacity: 0;
}

.button:hover {
  opacity: 0.8;
}
